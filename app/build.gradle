apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "link.webarata3.dro.housewifi"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    // http://java-lang-programming.com/ja/lints/1
    lintOptions {
        disable 'GoogleAppIndexingWarning'
        baseline file("lint-baseline.xml") // your choice of filename/path here
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support:design:28.0.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation "org.robolectric:robolectric:4.0-beta-1"
    androidTestImplementation 'androidx.test:runner:1.1.0-beta01'
    androidTestImplementation 'androidx.test:rules:1.1.0-beta01'
}

//########## その他設定

// JUnit
// task test
// レポート app/build/test-results/testDebugUnitTest/*.xml

// JaCoCo
// task testDebugUnitTest jacocoTestReport
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.2"
}

task jacocoTestReport(type: JacocoReport) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    // Jenkinsは、シングルクォートが不要
    // **/R.class, **/R$*.class, **/BuildConfig.*, **/Manifest*.*, **/*Test*.*,  android/**/*.*, androidx/**/*.*
    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*',
                      'android/**/*.*', 'androidx/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug/", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}
